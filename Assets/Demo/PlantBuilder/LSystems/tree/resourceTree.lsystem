#axiom /(-50)@(1)r(0.3, 0, 100, 10, 20)R(0)S(2)F[&(90)i(0)s(0)L(0.05)]T(5)
#iterations 2000


#symbols +-/\&^F$@!`
#matches @!`

#define leafProbability 1

#define defaultMaxWater 100
#define defaultMaxGlucose 20
#define leafSunlightMultiplier 10
#define maxGlucoseFromLeaf 3





#symbols SWQB

#symbols ra
#matches r
#define diffusionStepsPerStep 2
#include diffusion (Node->r) (Amount->a)

#symbols i
#include organIdentity (Identifier->i)
#symbols s
#matches s
#include sunlight (LightAmount->s)


S(x) -> a(x)S(x)

#symbols TFK
#matches TK
P(0.5) | r(a, water, c, glucose, d) < T(x) : water >= 1 && glucose >= 1 && x >  0 -> a(-1, -1)FT(x - 1)
P(0.5) | r(a, water, c, glucose, d) < T(x) : water >= 1 && glucose >= 1 && x >  0 -> T(x)

P(0.9) | r(a, water, c, glucose, d) < T(x) : water >= 2 && glucose >= 2 && x <= 0 -> a(-2, -2)/(137)[\(180)&(90)l(.1)][&(90)l(.1)][+(18)Fr(.1, 0, defaultMaxWater, 0, defaultMaxGlucose)R(0)T(5)][-(18)Fr(.1, 0, defaultMaxWater, 0, defaultMaxGlucose)R(0)T(5)]
P(0.1) | r(a, water, c, glucose, d) < T(x) : water >= 2 && glucose >= 2 && x <= 0 -> a(-2)FK


## L is a leaf
## l is a precursor to a leaf
#symbols lL
P(leafProbability)     | r(a, water, c, glucose, d) < l(x) : water >= 1 && glucose >= 1 -> i(0)s(0)L(x)
P(1 - leafProbability) | r(a, water, c, glucose, d) < l(x) : water >= 1 && glucose >= 1 ->
r(a, water, c, glucose, d)s(sunlight) < L(x) : water >= sunlight * leafSunlightMultiplier / 2 && glucose <= maxGlucoseFromLeaf -> a(-sunlight * leafSunlightMultiplier / 2, sunlight * leafSunlightMultiplier)L(x)

## R is the resource visualizer
#symbols R
r(a, water, c, glucose, d) < R(x) -> R(glucose)
							 R(x) -> 


				 
				 