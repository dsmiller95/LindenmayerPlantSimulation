#axiom S(0)
#iterations 40

#define terminalBudGrowth 6
#define shootHeight 5
#define internodeHeight 6
#define branchInternodes 3
#define leafAge 3
#define leavesPerPetiole 3
#define petioleLeafAngularDist 110
#define flowerAge 3

#define leafExpression [&&L][/(180)&&L]
#define budBranchChanceFactor 0.4
#define shootStemBranchingFactor 0.5
#define flowerFailureChance 0.7


## S is the Shoot symbol
S(x) : x == 0 -> FS(x + 1)NT(-shootHeight)
S(x) : x < shootHeight && x > 0-> FS(x+1)
S(x) : x == shootHeight -> []

## T is the terminal bud
T(x) : x < 0 -> T(x + 1)
T(x) : x < terminalBudGrowth && x >= 0 -> I(internodeHeight)[&(60)B(x + 1)][\(180)&(60)B(x + 1)]\(137)T(x + 1)
T(x) : x == terminalBudGrowth -> []


#define flowerStalkLength 6

## B is a bud off the main stem, and randomly chooses what it will become
P(budBranchChanceFactor) B(x) -> [^(50)V]R(x, 0)
P(1 - budBranchChanceFactor) B(x) -> [^(50)V]P(leavesPerPetiole)

## V is a flowering bud
P(flowerFailureChance) V -> []
P(1 - flowerFailureChance) V -> V(flowerStalkLength)
V(x) : x > 0 -> $(0.1)FV(x - 1)
V(x) : x <= 0 -> [``C(x)K(0)]

#define timeToFruit 4
 
## C is a flower controller
C(x) : x < timeToFruit -> C(x + 1)
C(x)K(y) : x >= timeToFruit -> D(0)

#define fruiteSize 3
## D is a fruiting body
D(x) : x < fruiteSize -> D(x + 1)

## R is a side branch terminal node.
P(shootStemBranchingFactor) R(x, y) : x < branchInternodes && y >= internodeHeight -> [-(75)^(20)N(x + 1)][+(75)^(20)N(x + 1)]R(x + 1, 0)
P(1 - shootStemBranchingFactor) R(x, y) : x < branchInternodes && y >= internodeHeight -> R(x + 1, 0)
R(x, y) : x >= branchInternodes && y >= internodeHeight -> petiole(leavesPerPetiole)

## rotate relative to world
R(x, y) : y < internodeHeight -> $(0.02)FR(x, y + 1)

## N is a bud off the branch stem, and randomly chooses what it will become
P(budBranchChanceFactor) N(x) -> [^V]petiole(leavesPerPetiole)
P(1 - budBranchChanceFactor) N(x) -> [^V]FL

## P is the petiole, x is number of leaves
#define petiole( P(
petiole(x) : x >= 2 -> I(3)[O((x - 1) / 2, -petioleLeafAngularDist)]L[O((x - 1) / 2, petioleLeafAngularDist)]
petiole(x) : x > 0 -> L
O(x, t) : x > 0 -> +(t)L(x/(leavesPerPetiole/2) * leafAge)O(x - 1, t)

## I is an internode, used to just build length of certain size
I(x) : x > 0 -> I(x - 1)$(0.005)F

## organs
N -> leafExpression
L -> [`l(1, leafAge)]
L(x) -> [`l(1, x)]
l(x, y) : x < y -> l(x + 1, y)
K(x) : x < flowerAge -> K(x + 1)