#axiom T(9, 0, 0)
#iterations 18

#symbols +-!/\&^F$`@
#matches +-!


## diffusion
#define diffusionStepsPerStep 20
#define trunkDiffusion 0.1
#define leafDiffusion 0.1
#include diffusion (Node->r) (Amount->a)
#symbols ra
#matches r

#symbols i
#include organIdentity (Identifier->i)
#define |identity| i(0, 0, 0)

#symbols v
#include extraVertexData (VertexData->v)

## variables defined for utility
#define branchDescale (2^-0.5)
#define branchScaleUp (2.2^0.5)

#define primaryAdjust (0.5)^(10 - x)
#define secondaryAdjust (0)


## T is the terminal bud
#symbols T
T(x, i, k) : x > 0 -> |identity|v(i, k)S(7)[+(90)FFkK][|identity|^(45)\(90)FL][|identity|&(45)/(90)FL][^(90)t(x, i, k)][&(90)t(x, i, k)]

#symbols t
P(0.5) | t(x, i, k) -> T(x - 1, i + primaryAdjust, k + secondaryAdjust)
P(0.5) | t(x, i, k) -> T(x - 1, i + secondaryAdjust, k + primaryAdjust)

## K is a flower mesh
#symbols K

## k is a pollen entity of some sort
#symbols k
k -> 


## S is a special stem that increases its length by a set factor every step
#symbols S
S(x) -> S(x, 1)
S(x, y) -> S(x * branchScaleUp)

## I(netTotal, ) : (x * branchScaleUp - 1) > 2 -> FI((x * branchScaleUp - 1) / 2)I((x * branchScaleUp - 1) / 2)
## I(x) : (x * branchScaleUp - 1) > 1 -> FI(x * branchScaleUp - 1)
## I(x) -> I(x * branchScaleUp)

## I is a utility internode
#symbols I
I(x) : x > 0 && x / 2 >  2 -> I((x - x % 2) / 2)I((x + x % 2) / 2)
I(x) : x > 0 && x / 2 <= 2 -> FI(x - 1)
I(x) : x <= 0 -> 

## L is a leaf
#symbols L
